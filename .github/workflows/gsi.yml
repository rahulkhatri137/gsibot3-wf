name: GSIBot3 automated
 
on:
  push:
  workflow_dispatch:

env:
  TYPE: build
  TZ: Asia/Kolkata
jobs:
  Bot3:
    runs-on: ubuntu-20.04
    timeout-minutes: 525600

    steps:
       - name: Checkouts
         uses: actions/checkout@master
         
       - name: Initializing environment
         continue-on-error: true
         timeout-minutes: 100
         run: |
              sudo -E apt-get -qq update
              sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev rsync flex bison ccache expect aria2 unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller device-tree-compiler liblzma-dev brotli liblz4-tool axel gawk aria2 detox cpio rename build-essential simg2img aria2 python3-pip tree
              rm -rf /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
              sudo apt-get purge --purge openjdk* -y
              git config --global user.name "${{ secrets.GHUSER }}"
              git config --global user.email "${{ secrets.GHMAIL }}"

       - name: Build Bot
         run: |
              export ABC="$(pwd)"
              cd /usr; sudo mkdir -p oracle/java/ && cd oracle/java/
              sudo wget 'https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java16-linux-amd64-21.2.0.tar.gz' -O graalvm-jdk16.tar.gz >> /dev/null 2>&1
              sudo tar -xzvf graalvm-jdk16.tar.gz >> /dev/null 2>&1 && sudo rm -f graalvm-jdk16.tar.gz
              export JAVA_HOME=/usr/oracle/java/graalvm-ce-java16-21.2.0
              export PATH=$PATH:$JAVA_HOME/bin
              sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/javac" 1
              sudo update-alternatives --install "/usr/bin/java" "java" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/java" 1
              sudo update-alternatives --install "/usr/bin/gu" "gu" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/gu" 1
              sudo dpkg --purge --force-depends ca-certificates-java
              sudo apt-get install ca-certificates-java -y
              cd ${ABC}
              git clone -b main https://github.com/rahulkhatri137/Bot3 Bot; cd Bot
              ./gradlew shadowJar
              cd ../; mv Bot/build/libs/*.jar BoboBot.jar
              rm -rf Bot
     
       - name: Setup Erfan Tools
         timeout-minutes: 10
         run: |
              sudo -E apt-get -qq install openjdk-8-jdk
              git clone --recurse-submodules https://github.com/rahulkhatri137/ErfanGSIs
              sudo chmod -R 0777 ErfanGSIs
              sudo bash ErfanGSIs/setup.sh
         
       - name: Add values
         timeout-minutes: 1
         run: |
              mkdir configs && cd configs
              touch configs.prop
              touch allowed2port.json
              echo "bot-token=${{ secrets.BOTKEY }}" >> configs.prop
              echo "bot-username=${{ secrets.BOTUN }}" >> configs.prop
              echo "bot-master=${{ secrets.USERKEY }}" >> configs.prop
              echo "privateChat=-1001412098793" >> configs.prop
              echo "requestChat=-1001484691064" >> configs.prop
              echo "publicChannel=RK137GSI" >> configs.prop
              echo "bot-sf-pass=${{ secrets.SFPASS }}" >> sf-creds.prop
              echo "bot-sf-proj=${{ secrets.PROJECT }}" >> sf-creds.prop
              echo "bot-sf-user=${{ secrets.SFUSER }}" >> sf-creds.prop
              echo "bot-announcement-id=-1001500771995" >> sf-creds.prop
              echo "bot-sf-host=frs.sourceforge.net" >> sf-creds.prop
              echo "bot-send-announcement=true" >> sf-creds.prop
              echo '["1292499760","1396522419","1635533429","1057998166"]' >> allowed2port.json

       - name: Run Bot
         timeout-minutes: 350
         continue-on-error: true
         run: |
              sudo /usr/oracle/java/graalvm-ce-java16-21.2.0/bin/java -jar BoboBot.jar
         
       - name: Loop
         continue-on-error: true
         run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY} loop
          cd loop || exit 1
          git commit --allow-empty -m "Workflow: Loop"
          git push -q https://${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY}
